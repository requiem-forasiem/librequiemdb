<MACRO>
<NAME>LIBREQUIEMDB_VERSION</NAME>
#define LIBREQUIEMDB_VERSION "1.0.0rc1"
</MACRO>
<FUNCTION>
<NAME>requiemdb_check_version</NAME>
<RETURNS>const char *</RETURNS>
const char *req_version
</FUNCTION>
<TYPEDEF>
<NAME>requiemdb_t</NAME>
typedef struct requiemdb requiemdb_t;
</TYPEDEF>
<TYPEDEF>
<NAME>requiemdb_result_idents_t</NAME>
typedef struct requiemdb_result_idents requiemdb_result_idents_t;
</TYPEDEF>
<TYPEDEF>
<NAME>requiemdb_result_values_t</NAME>
typedef struct requiemdb_result_values requiemdb_result_values_t;
</TYPEDEF>
<ENUM>
<NAME>requiemdb_result_idents_order_t</NAME>
typedef enum {
        REQUIEMDB_RESULT_IDENTS_ORDER_BY_NONE = 0,
        REQUIEMDB_RESULT_IDENTS_ORDER_BY_CREATE_TIME_DESC = 1,
        REQUIEMDB_RESULT_IDENTS_ORDER_BY_CREATE_TIME_ASC = 2
} requiemdb_result_idents_order_t;
</ENUM>
<MACRO>
<NAME>REQUIEMDB_ERRBUF_SIZE</NAME>
#define REQUIEMDB_ERRBUF_SIZE 512
</MACRO>
<FUNCTION>
<NAME>requiemdb_init</NAME>
<RETURNS>int </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_deinit</NAME>
<RETURNS>void </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_t **db, requiemdb_sql_t *sql, const char *format_name, char *errbuf, size_t size
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_t *db
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_format_name</NAME>
<RETURNS>const char *</RETURNS>
requiemdb_t *db
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_format_version</NAME>
<RETURNS>const char *</RETURNS>
requiemdb_t *db
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_set_format</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, const char *format_name
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_sql</NAME>
<RETURNS>requiemdb_sql_t *</RETURNS>
requiemdb_t *db
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_result_idents_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_result_idents_t *result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_result_idents_get_next</NAME>
<RETURNS>int </RETURNS>
requiemdb_result_idents_t *result, uint64_t *ident
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_result_values_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_result_values_t *result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_result_values_get_next</NAME>
<RETURNS>int </RETURNS>
requiemdb_result_values_t *result, idmef_value_t ***values
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_error</NAME>
<RETURNS>char *</RETURNS>
requiemdb_t *db, requiemdb_error_t error, char *errbuf, size_t size
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_insert_message</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, idmef_message_t *message
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_alert_idents</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, idmef_criteria_t *criteria,int limit, int offset,requiemdb_result_idents_order_t order,requiemdb_result_idents_t **result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_heartbeat_idents</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, idmef_criteria_t *criteria,int limit, int offset,requiemdb_result_idents_order_t order,requiemdb_result_idents_t **result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_alert</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, uint64_t ident, idmef_message_t **message
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_heartbeat</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, uint64_t ident, idmef_message_t **message
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_delete_alert</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, uint64_t ident
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_delete_alert_from_list</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_t *db, uint64_t *idents, size_t size
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_delete_alert_from_result_idents</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_t *db, requiemdb_result_idents_t *result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_delete_heartbeat</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, uint64_t ident
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_delete_heartbeat_from_list</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_t *db, uint64_t *idents, size_t size
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_delete_heartbeat_from_result_idents</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_t *db, requiemdb_result_idents_t *result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_get_values</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db, requiemdb_path_selection_t *path_selection,idmef_criteria_t *criteria, requiem_bool_t distinct, int limit, int offset,requiemdb_result_values_t **result
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_transaction_start</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_transaction_end</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_transaction_abort</NAME>
<RETURNS>int </RETURNS>
requiemdb_t *db
</FUNCTION>
<TYPEDEF>
<NAME>requiemdb_plugin_sql_t</NAME>
typedef struct requiemdb_plugin_sql requiemdb_plugin_sql_t;
</TYPEDEF>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_open_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, void **session
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_close_func_t</NAME>
<RETURNS>void </RETURNS>
void *session
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_escape_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, const char *input, size_t input_size, char **output
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_escape_binary_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, const unsigned char *input, size_t input_size, char **output
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_unescape_binary_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, const char *input, unsigned char **output, size_t *output_size
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_query_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, const char *query, void **res
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_get_column_name_func_t</NAME>
<RETURNS>const char *</RETURNS>
void *session, void *resource, unsigned int column_num
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_get_column_num_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, void *resource, const char *column_name
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_resource_destroy_func_t</NAME>
<RETURNS>void </RETURNS>
void *session, void *resource
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_fetch_row_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, void *resource, void **row
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_fetch_field_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, void *resource, void *row,
                                                       unsigned int column_num, const char **value, size_t *len
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_build_time_constraint_string_func_t</NAME>
<RETURNS>int </RETURNS>
requiem_string_t *output, const char *field,
                                                                        requiemdb_sql_time_constraint_type_t type,
                                                                        idmef_criterion_operator_t operator, int value, int gmt_offset
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_build_time_interval_string_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_time_constraint_type_t type, int value,
                                                                      char *buf, size_t size
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_build_limit_offset_string_func_t</NAME>
<RETURNS>int </RETURNS>
void *session, int limit, int offset, requiem_string_t *output
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_build_constraint_string_func_t</NAME>
<RETURNS>int </RETURNS>
requiem_string_t *out, const char *field,
                                                                   idmef_criterion_operator_t operator, const char *value
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_get_operator_string_func_t</NAME>
<RETURNS>const char *</RETURNS>
idmef_criterion_operator_t operator
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_sql_build_timestamp_string_func_t</NAME>
<RETURNS>int </RETURNS>
const struct tm *t, char *out, size_t size
</USER_FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_open_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_open_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_close_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_close_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_escape_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_escape_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_escape_binary_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_escape_binary_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_unescape_binary_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_unescape_binary_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_query_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_query_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_get_column_count_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_get_column_count_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_get_row_count_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_get_row_count_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_get_column_name_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_get_column_name_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_get_column_num_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_get_column_num_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_resource_destroy_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_resource_destroy_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_fetch_row_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_fetch_row_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_fetch_field_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin, requiemdb_plugin_sql_fetch_field_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_build_time_constraint_string_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin,requiemdb_plugin_sql_build_time_constraint_string_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_build_time_interval_string_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin,requiemdb_plugin_sql_build_time_interval_string_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_build_limit_offset_string_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin,requiemdb_plugin_sql_build_limit_offset_string_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_build_constraint_string_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin,requiemdb_plugin_sql_build_constraint_string_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_get_operator_string_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin,requiemdb_plugin_sql_get_operator_string_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_set_build_timestamp_string_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_sql_t *plugin,requiemdb_plugin_sql_build_timestamp_string_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_sql_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_plugin_sql_t **plugin
</FUNCTION>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_HOST</NAME>
#define REQUIEMDB_SQL_SETTING_HOST "host"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_PORT</NAME>
#define REQUIEMDB_SQL_SETTING_PORT "port"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_NAME</NAME>
#define REQUIEMDB_SQL_SETTING_NAME "name"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_USER</NAME>
#define REQUIEMDB_SQL_SETTING_USER "user"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_PASS</NAME>
#define REQUIEMDB_SQL_SETTING_PASS "pass"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_TYPE</NAME>
#define REQUIEMDB_SQL_SETTING_TYPE "type"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_FILE</NAME>
#define REQUIEMDB_SQL_SETTING_FILE "file"
</MACRO>
<MACRO>
<NAME>REQUIEMDB_SQL_SETTING_LOG</NAME>
#define REQUIEMDB_SQL_SETTING_LOG "log"
</MACRO>
<TYPEDEF>
<NAME>requiemdb_sql_settings_t</NAME>
typedef struct requiemdb_sql_settings requiemdb_sql_settings_t;
</TYPEDEF>
<FUNCTION>
<NAME>requiemdb_sql_settings_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t **settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_new_from_string</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t **settings, const char *str
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings,const char *name, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_from_string</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *str
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings, const char *name
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_host</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_host</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_port</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_port</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_name</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_name</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_user</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_user</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_pass</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_pass</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_log</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_log</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_type</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_type</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_set_file</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_settings_t *settings, const char *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_settings_get_file</NAME>
<RETURNS>const char *</RETURNS>
const requiemdb_sql_settings_t *settings
</FUNCTION>
<ENUM>
<NAME>requiemdb_error_code_t</NAME>
typedef enum {
        REQUIEMDB_ERROR_NO_ERROR = 0,
        REQUIEMDB_ERROR_GENERIC = 1,
        REQUIEMDB_ERROR_INVALID_SETTINGS_STRING = 2,
        REQUIEMDB_ERROR_CONNECTION = 3,
        REQUIEMDB_ERROR_QUERY = 4,
        REQUIEMDB_ERROR_INVALID_COLUMN_NUM = 5,
        REQUIEMDB_ERROR_INVALID_COLUMN_NAME = 6,
        REQUIEMDB_ERROR_INVALID_VALUE = 7,
        REQUIEMDB_ERROR_INVALID_VALUE_TYPE = 8,
        REQUIEMDB_ERROR_UNKNOWN_SQL_PLUGIN = 9,
        REQUIEMDB_ERROR_UNKNOWN_FORMAT_PLUGIN = 10,
        REQUIEMDB_ERROR_ALREADY_IN_TRANSACTION = 11,
        REQUIEMDB_ERROR_NOT_IN_TRANSACTION = 12,
	REQUIEMDB_ERROR_INVALID_MESSAGE_IDENT = 13,
	REQUIEMDB_ERROR_INVALID_SELECTED_OBJECT_STRING = 14,
	REQUIEMDB_ERROR_INVALID_OBJECT_SELECTION = 15,
	REQUIEMDB_ERROR_SCHEMA_VERSION_TOO_OLD = 16,
	REQUIEMDB_ERROR_SCHEMA_VERSION_TOO_RECENT = 17,
	REQUIEMDB_ERROR_SCHEMA_VERSION_INVALID = 18,
	REQUIEMDB_ERROR_CANNOT_LOAD_SQL_PLUGIN = 19,
	REQUIEMDB_ERROR_CANNOT_LOAD_FORMAT_PLUGIN = 20
	
} requiemdb_error_code_t;
</ENUM>
<TYPEDEF>
<NAME>requiemdb_error_t</NAME>
typedef requiem_error_t requiemdb_error_t;
</TYPEDEF>
<FUNCTION>
<NAME>requiem_error_from_errno</NAME>
<RETURNS>return </RETURNS>
err
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_strerror</NAME>
<RETURNS>const char *</RETURNS>
requiemdb_error_t error
</FUNCTION>
<TYPEDEF>
<NAME>requiemdb_plugin_format_t</NAME>
typedef struct requiemdb_plugin_format requiemdb_plugin_format_t;
</TYPEDEF>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_check_schema_version_func_t</NAME>
<RETURNS>int </RETURNS>
const char *version
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_alert_idents_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, idmef_criteria_t *criteria,
                                                               int limit, int offset, requiemdb_result_idents_order_t order,
                                                               void **res
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_heartbeat_idents_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, idmef_criteria_t *criteria,
                                                                   int limit, int offset, requiemdb_result_idents_order_t order,
                                                                   void **res
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_message_ident_count_func_t</NAME>
<RETURNS>size_t </RETURNS>
void *res
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_next_message_ident_func_t</NAME>
<RETURNS>int </RETURNS>
void *res, uint64_t *ident
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_destroy_message_idents_resource_func_t</NAME>
<RETURNS>void </RETURNS>
void *res
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_alert_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, uint64_t ident, idmef_message_t **message
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_heartbeat_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, uint64_t ident, idmef_message_t **message
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_delete_alert_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, uint64_t ident
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_delete_alert_from_list_func_t</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_sql_t *sql, uint64_t *idents, size_t size
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_delete_alert_from_result_idents_func_t</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_sql_t *sql,
                                                                                  requiemdb_result_idents_t *results
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_delete_heartbeat_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, uint64_t ident
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_delete_heartbeat_from_list_func_t</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_sql_t *sql, uint64_t *idents, size_t size
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_delete_heartbeat_from_result_idents_func_t</NAME>
<RETURNS>ssize_t </RETURNS>
requiemdb_sql_t *sql,
                                                                                      requiemdb_result_idents_t *results
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_insert_message_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, idmef_message_t *message
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_values_func_t</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, requiemdb_path_selection_t *selection,
                                                         idmef_criteria_t *criteria, int distinct, int limit, int offset, void **res
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_get_next_values_func_t</NAME>
<RETURNS>int </RETURNS>
void *res, requiemdb_path_selection_t *selection, idmef_value_t ***values
</USER_FUNCTION>
<USER_FUNCTION>
<NAME>requiemdb_plugin_format_destroy_values_resource_func_t</NAME>
<RETURNS>void </RETURNS>
void *res
</USER_FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_check_schema_version_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_check_schema_version_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_alert_idents_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_get_alert_idents_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_heartbeat_idents_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_get_heartbeat_idents_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_message_ident_count_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_get_message_ident_count_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_next_message_ident_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_get_next_message_ident_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_destroy_message_idents_resource_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_destroy_message_idents_resource_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_alert_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin, requiemdb_plugin_format_get_alert_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_heartbeat_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin, requiemdb_plugin_format_get_heartbeat_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_delete_alert_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin, requiemdb_plugin_format_delete_alert_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_delete_alert_from_list_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_delete_alert_from_list_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_delete_alert_from_result_idents_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_delete_alert_from_result_idents_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_delete_heartbeat_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_delete_heartbeat_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_delete_heartbeat_from_list_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_delete_heartbeat_from_list_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_delete_heartbeat_from_result_idents_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_delete_heartbeat_from_result_idents_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_insert_message_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_insert_message_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_values_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_get_values_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_get_next_values_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_get_next_values_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_set_destroy_values_resource_func</NAME>
<RETURNS>void </RETURNS>
requiemdb_plugin_format_t *plugin,requiemdb_plugin_format_destroy_values_resource_func_t func
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_plugin_format_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_plugin_format_t **ret
</FUNCTION>
<MACRO>
<NAME>REQUIEMDB_SQL_TIMESTAMP_STRING_SIZE</NAME>
#define REQUIEMDB_SQL_TIMESTAMP_STRING_SIZE 128
</MACRO>
<ENUM>
<NAME>requiemdb_sql_time_constraint_type_t</NAME>
typedef enum {
	REQUIEMDB_SQL_TIME_CONSTRAINT_YEAR,
	REQUIEMDB_SQL_TIME_CONSTRAINT_MONTH,
	REQUIEMDB_SQL_TIME_CONSTRAINT_YDAY,
	REQUIEMDB_SQL_TIME_CONSTRAINT_MDAY,
	REQUIEMDB_SQL_TIME_CONSTRAINT_WDAY,
	REQUIEMDB_SQL_TIME_CONSTRAINT_HOUR,
	REQUIEMDB_SQL_TIME_CONSTRAINT_MIN,
	REQUIEMDB_SQL_TIME_CONSTRAINT_SEC
} requiemdb_sql_time_constraint_type_t;
</ENUM>
<TYPEDEF>
<NAME>requiemdb_sql_t</NAME>
typedef struct requiemdb_sql requiemdb_sql_t;
</TYPEDEF>
<TYPEDEF>
<NAME>requiemdb_sql_table_t</NAME>
typedef struct requiemdb_sql_table requiemdb_sql_table_t;
</TYPEDEF>
<TYPEDEF>
<NAME>requiemdb_sql_row_t</NAME>
typedef struct requiemdb_sql_row requiemdb_sql_row_t;
</TYPEDEF>
<TYPEDEF>
<NAME>requiemdb_sql_field_t</NAME>
typedef struct requiemdb_sql_field requiemdb_sql_field_t;
</TYPEDEF>
<FUNCTION>
<NAME>requiemdb_sql_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t **new, const char *type, requiemdb_sql_settings_t *settings
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_sql_t *sql
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_enable_query_logging</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const char *filename
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_disable_query_logging</NAME>
<RETURNS>void </RETURNS>
requiemdb_sql_t *sql
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_query</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const char *query, requiemdb_sql_table_t **table
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_query_sprintf</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, requiemdb_sql_table_t **table, const char *format, ...
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_insert</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const char *table, const char *fields, const char *format, ...
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_build_limit_offset_string</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, int limit, int offset, requiem_string_t *output
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_transaction_start</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_transaction_end</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_transaction_abort</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_escape_fast</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const char *input, size_t input_size, char **output
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_escape</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const char *input, char **output
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_escape_binary</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const unsigned char *input, size_t input_size, char **output
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_unescape_binary</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql, const char *input, size_t input_size,unsigned char **output, size_t *output_size
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_table_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_sql_table_t *table
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_table_get_column_name</NAME>
<RETURNS>const char *</RETURNS>
requiemdb_sql_table_t *table, unsigned int column_num
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_table_get_column_num</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_table_t *table, const char *column_name
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_table_get_column_count</NAME>
<RETURNS>unsigned int </RETURNS>
requiemdb_sql_table_t *table
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_table_get_row_count</NAME>
<RETURNS>unsigned int </RETURNS>
requiemdb_sql_table_t *table
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_table_fetch_row</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_table_t *table, requiemdb_sql_row_t **row
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_row_fetch_field</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_row_t *row, unsigned int column_num, requiemdb_sql_field_t **field
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_row_fetch_field_by_name</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_row_t *row, const char *column_name, requiemdb_sql_field_t **field
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_get_value</NAME>
<RETURNS>const char *</RETURNS>
requiemdb_sql_field_t *field
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_get_len</NAME>
<RETURNS>size_t </RETURNS>
requiemdb_sql_field_t *field
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_int8</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, int8_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_uint8</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, uint8_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_int16</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, int16_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_uint16</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, uint16_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_int32</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, int32_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_uint32</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, uint32_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_int64</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, int64_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_uint64</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, uint64_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_float</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, float *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_double</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, double *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_field_to_string</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_field_t *field, requiem_string_t *output
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_build_criterion_string</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql,requiem_string_t *output,const char *field,idmef_criterion_operator_t operator, idmef_criterion_value_t *value
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_time_from_timestamp</NAME>
<RETURNS>int </RETURNS>
idmef_time_t *time, const char *time_buf, int32_t gmtoff, uint32_t usec
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_time_to_timestamp</NAME>
<RETURNS>int </RETURNS>
requiemdb_sql_t *sql,const idmef_time_t *time,char *time_buf, size_t time_buf_size,char *gmtoff_buf, size_t gmtoff_buf_size,char *usec_buf, size_t usec_buf_size
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_sql_get_plugin_error</NAME>
<RETURNS>const char *</RETURNS>
requiemdb_sql_t *sql
</FUNCTION>
<ENUM>
<NAME>requiemdb_selected_path_flags_t</NAME>
typedef enum {
	REQUIEMDB_SELECTED_OBJECT_FUNCTION_MIN = 0x01,
	REQUIEMDB_SELECTED_OBJECT_FUNCTION_MAX = 0x02,
	REQUIEMDB_SELECTED_OBJECT_FUNCTION_AVG = 0x04,
	REQUIEMDB_SELECTED_OBJECT_FUNCTION_STD = 0x08,
	REQUIEMDB_SELECTED_OBJECT_FUNCTION_COUNT = 0x10,

	REQUIEMDB_SELECTED_OBJECT_GROUP_BY = 0x20,

	REQUIEMDB_SELECTED_OBJECT_ORDER_ASC = 0x40,
	REQUIEMDB_SELECTED_OBJECT_ORDER_DESC = 0x80
} requiemdb_selected_path_flags_t;
</ENUM>
<TYPEDEF>
<NAME>requiemdb_path_selection_t</NAME>
typedef struct requiemdb_path_selection requiemdb_path_selection_t;
</TYPEDEF>
<TYPEDEF>
<NAME>requiemdb_selected_path_t</NAME>
typedef struct requiemdb_selected_path requiemdb_selected_path_t;
</TYPEDEF>
<FUNCTION>
<NAME>requiemdb_selected_path_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_selected_path_t **selected_path,idmef_path_t *path, int flags
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_selected_path_new_string</NAME>
<RETURNS>int </RETURNS>
requiemdb_selected_path_t **selected_path, const char *str
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_selected_path_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_selected_path_t *selected_path
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_selected_path_get_path</NAME>
<RETURNS>idmef_path_t *</RETURNS>
requiemdb_selected_path_t *selected_path
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_selected_path_get_flags</NAME>
<RETURNS>requiemdb_selected_path_flags_t </RETURNS>
requiemdb_selected_path_t *selected_path
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_path_selection_new</NAME>
<RETURNS>int </RETURNS>
requiemdb_path_selection_t **path_selection
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_path_selection_destroy</NAME>
<RETURNS>void </RETURNS>
requiemdb_path_selection_t *path_selection
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_path_selection_add</NAME>
<RETURNS>void </RETURNS>
requiemdb_path_selection_t *path_selection,requiemdb_selected_path_t *selected_path
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_path_selection_get_next</NAME>
<RETURNS>requiemdb_selected_path_t *</RETURNS>
requiemdb_path_selection_t *path_selection,requiemdb_selected_path_t *selected_path
</FUNCTION>
<FUNCTION>
<NAME>requiemdb_path_selection_get_count</NAME>
<RETURNS>size_t </RETURNS>
requiemdb_path_selection_t *path_selection
</FUNCTION>
